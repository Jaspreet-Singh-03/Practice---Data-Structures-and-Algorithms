class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        List<List<Integer>> res = new LinkedList<List<Integer>>();
        if(nums1.length==0 || nums2.length==0 || k==0) return res;
        PriorityQueue<Integer[]> pq = new PriorityQueue<Integer[]>( (a,b) -> (a[0]+a[1]) - (b[0]+b[1]));
        for(int num1 : nums1){
              pq.offer(new Integer[]{num1,nums2[0],0});
        }
        while(!pq.isEmpty() && res.size()<k){
            Integer[] curr = pq.poll();
            res.add(Arrays.asList(new Integer[]{curr[0],curr[1]}));
            int index = curr[2];
            if(index==nums2.length-1)
                continue;
            pq.offer(new Integer[]{curr[0],nums2[index+1],index+1});
        }
        return res;
    }
}
